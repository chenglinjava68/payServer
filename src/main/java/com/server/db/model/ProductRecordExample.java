package com.server.db.model;

import java.util.ArrayList;
import java.util.List;

public class ProductRecordExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table t_product
     * @mbggenerated
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table t_product
     * @mbggenerated
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table t_product
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public ProductRecordExample() {
	oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
	this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public String getOrderByClause() {
	return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
	this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public boolean isDistinct() {
	return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
	return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public void or(Criteria criteria) {
	oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public Criteria or() {
	Criteria criteria = createCriteriaInternal();
	oredCriteria.add(criteria);
	return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public Criteria createCriteria() {
	Criteria criteria = createCriteriaInternal();
	if (oredCriteria.size() == 0) {
	    oredCriteria.add(criteria);
	}
	return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
	Criteria criteria = new Criteria();
	return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_product
     * @mbggenerated
     */
    public void clear() {
	oredCriteria.clear();
	orderByClause = null;
	distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table t_product
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
	protected List<Criterion> criteria;

	protected GeneratedCriteria() {
	    super();
	    criteria = new ArrayList<Criterion>();
	}

	public boolean isValid() {
	    return criteria.size() > 0;
	}

	public List<Criterion> getAllCriteria() {
	    return criteria;
	}

	public List<Criterion> getCriteria() {
	    return criteria;
	}

	protected void addCriterion(String condition) {
	    if (condition == null) {
		throw new RuntimeException("Value for condition cannot be null");
	    }
	    criteria.add(new Criterion(condition));
	}

	protected void addCriterion(String condition, Object value, String property) {
	    if (value == null) {
		throw new RuntimeException("Value for " + property + " cannot be null");
	    }
	    criteria.add(new Criterion(condition, value));
	}

	protected void addCriterion(String condition, Object value1, Object value2, String property) {
	    if (value1 == null || value2 == null) {
		throw new RuntimeException("Between values for " + property + " cannot be null");
	    }
	    criteria.add(new Criterion(condition, value1, value2));
	}

	public Criteria andUidIsNull() {
	    addCriterion("uid is null");
	    return (Criteria) this;
	}

	public Criteria andUidIsNotNull() {
	    addCriterion("uid is not null");
	    return (Criteria) this;
	}

	public Criteria andUidEqualTo(Long value) {
	    addCriterion("uid =", value, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidNotEqualTo(Long value) {
	    addCriterion("uid <>", value, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidGreaterThan(Long value) {
	    addCriterion("uid >", value, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidGreaterThanOrEqualTo(Long value) {
	    addCriterion("uid >=", value, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidLessThan(Long value) {
	    addCriterion("uid <", value, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidLessThanOrEqualTo(Long value) {
	    addCriterion("uid <=", value, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidIn(List<Long> values) {
	    addCriterion("uid in", values, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidNotIn(List<Long> values) {
	    addCriterion("uid not in", values, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidBetween(Long value1, Long value2) {
	    addCriterion("uid between", value1, value2, "uid");
	    return (Criteria) this;
	}

	public Criteria andUidNotBetween(Long value1, Long value2) {
	    addCriterion("uid not between", value1, value2, "uid");
	    return (Criteria) this;
	}

	public Criteria andChannelIdIsNull() {
	    addCriterion("channelId is null");
	    return (Criteria) this;
	}

	public Criteria andChannelIdIsNotNull() {
	    addCriterion("channelId is not null");
	    return (Criteria) this;
	}

	public Criteria andChannelIdEqualTo(String value) {
	    addCriterion("channelId =", value, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdNotEqualTo(String value) {
	    addCriterion("channelId <>", value, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdGreaterThan(String value) {
	    addCriterion("channelId >", value, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdGreaterThanOrEqualTo(String value) {
	    addCriterion("channelId >=", value, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdLessThan(String value) {
	    addCriterion("channelId <", value, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdLessThanOrEqualTo(String value) {
	    addCriterion("channelId <=", value, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdLike(String value) {
	    addCriterion("channelId like", value, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdNotLike(String value) {
	    addCriterion("channelId not like", value, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdIn(List<String> values) {
	    addCriterion("channelId in", values, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdNotIn(List<String> values) {
	    addCriterion("channelId not in", values, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdBetween(String value1, String value2) {
	    addCriterion("channelId between", value1, value2, "channelId");
	    return (Criteria) this;
	}

	public Criteria andChannelIdNotBetween(String value1, String value2) {
	    addCriterion("channelId not between", value1, value2, "channelId");
	    return (Criteria) this;
	}

	public Criteria andProductIdIsNull() {
	    addCriterion("productId is null");
	    return (Criteria) this;
	}

	public Criteria andProductIdIsNotNull() {
	    addCriterion("productId is not null");
	    return (Criteria) this;
	}

	public Criteria andProductIdEqualTo(String value) {
	    addCriterion("productId =", value, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdNotEqualTo(String value) {
	    addCriterion("productId <>", value, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdGreaterThan(String value) {
	    addCriterion("productId >", value, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdGreaterThanOrEqualTo(String value) {
	    addCriterion("productId >=", value, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdLessThan(String value) {
	    addCriterion("productId <", value, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdLessThanOrEqualTo(String value) {
	    addCriterion("productId <=", value, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdLike(String value) {
	    addCriterion("productId like", value, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdNotLike(String value) {
	    addCriterion("productId not like", value, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdIn(List<String> values) {
	    addCriterion("productId in", values, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdNotIn(List<String> values) {
	    addCriterion("productId not in", values, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdBetween(String value1, String value2) {
	    addCriterion("productId between", value1, value2, "productId");
	    return (Criteria) this;
	}

	public Criteria andProductIdNotBetween(String value1, String value2) {
	    addCriterion("productId not between", value1, value2, "productId");
	    return (Criteria) this;
	}

	public Criteria andRmbIsNull() {
	    addCriterion("rmb is null");
	    return (Criteria) this;
	}

	public Criteria andRmbIsNotNull() {
	    addCriterion("rmb is not null");
	    return (Criteria) this;
	}

	public Criteria andRmbEqualTo(Integer value) {
	    addCriterion("rmb =", value, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbNotEqualTo(Integer value) {
	    addCriterion("rmb <>", value, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbGreaterThan(Integer value) {
	    addCriterion("rmb >", value, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbGreaterThanOrEqualTo(Integer value) {
	    addCriterion("rmb >=", value, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbLessThan(Integer value) {
	    addCriterion("rmb <", value, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbLessThanOrEqualTo(Integer value) {
	    addCriterion("rmb <=", value, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbIn(List<Integer> values) {
	    addCriterion("rmb in", values, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbNotIn(List<Integer> values) {
	    addCriterion("rmb not in", values, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbBetween(Integer value1, Integer value2) {
	    addCriterion("rmb between", value1, value2, "rmb");
	    return (Criteria) this;
	}

	public Criteria andRmbNotBetween(Integer value1, Integer value2) {
	    addCriterion("rmb not between", value1, value2, "rmb");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyIsNull() {
	    addCriterion("virtualCurrency is null");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyIsNotNull() {
	    addCriterion("virtualCurrency is not null");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyEqualTo(Integer value) {
	    addCriterion("virtualCurrency =", value, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyNotEqualTo(Integer value) {
	    addCriterion("virtualCurrency <>", value, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyGreaterThan(Integer value) {
	    addCriterion("virtualCurrency >", value, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyGreaterThanOrEqualTo(Integer value) {
	    addCriterion("virtualCurrency >=", value, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyLessThan(Integer value) {
	    addCriterion("virtualCurrency <", value, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyLessThanOrEqualTo(Integer value) {
	    addCriterion("virtualCurrency <=", value, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyIn(List<Integer> values) {
	    addCriterion("virtualCurrency in", values, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyNotIn(List<Integer> values) {
	    addCriterion("virtualCurrency not in", values, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyBetween(Integer value1, Integer value2) {
	    addCriterion("virtualCurrency between", value1, value2, "virtualCurrency");
	    return (Criteria) this;
	}

	public Criteria andVirtualCurrencyNotBetween(Integer value1, Integer value2) {
	    addCriterion("virtualCurrency not between", value1, value2, "virtualCurrency");
	    return (Criteria) this;
	}
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table t_product
     * @mbggenerated
     */
    public static class Criterion {
	private String condition;
	private Object value;
	private Object secondValue;
	private boolean noValue;
	private boolean singleValue;
	private boolean betweenValue;
	private boolean listValue;
	private String typeHandler;

	public String getCondition() {
	    return condition;
	}

	public Object getValue() {
	    return value;
	}

	public Object getSecondValue() {
	    return secondValue;
	}

	public boolean isNoValue() {
	    return noValue;
	}

	public boolean isSingleValue() {
	    return singleValue;
	}

	public boolean isBetweenValue() {
	    return betweenValue;
	}

	public boolean isListValue() {
	    return listValue;
	}

	public String getTypeHandler() {
	    return typeHandler;
	}

	protected Criterion(String condition) {
	    super();
	    this.condition = condition;
	    this.typeHandler = null;
	    this.noValue = true;
	}

	protected Criterion(String condition, Object value, String typeHandler) {
	    super();
	    this.condition = condition;
	    this.value = value;
	    this.typeHandler = typeHandler;
	    if (value instanceof List<?>) {
		this.listValue = true;
	    } else {
		this.singleValue = true;
	    }
	}

	protected Criterion(String condition, Object value) {
	    this(condition, value, null);
	}

	protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
	    super();
	    this.condition = condition;
	    this.value = value;
	    this.secondValue = secondValue;
	    this.typeHandler = typeHandler;
	    this.betweenValue = true;
	}

	protected Criterion(String condition, Object value, Object secondValue) {
	    this(condition, value, secondValue, null);
	}
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_product
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}